name: EKS CI/CD Pipeline with Security Scanning

# Single workflow file - no duplicates
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: eks-project-app

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    name: Build and Push Docker Image
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::106801461504:role/github-actions-role
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Test AWS credentials
      run: |
        echo "Testing AWS credentials..."
        aws sts get-caller-identity
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Build Docker image
      run: |
        docker build -t ${{ env.ECR_REPOSITORY }}:${{ github.sha }} ./app
        docker tag ${{ env.ECR_REPOSITORY }}:${{ github.sha }} ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        docker tag ${{ env.ECR_REPOSITORY }}:${{ github.sha }} ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        format: 'table'
        exit-code: '0'
        
    - name: Push image to Amazon ECR
      run: |
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
        
    - name: Output image URI
      run: |
        echo "Image pushed to: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}"

  deploy-to-eks:
    runs-on: ubuntu-latest
    name: Deploy to EKS
    needs: build-and-push
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::106801461504:role/github-actions-role
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Update kube config
      run: aws eks update-kubeconfig --name eks-cluster --region ${{ env.AWS_REGION }}
      
    - name: Install Checkov
      run: |
        pip install checkov
        
    - name: Run Checkov security scan
      run: |
        echo "Running Checkov security scan on Terraform files..."
        checkov -d ./terraform --output cli
        echo "Checkov scan completed (non-blocking)"
        
    - name: Deploy to EKS
      run: |
        echo "Deploying application to EKS cluster..."
        kubectl apply -f manifests/
        echo "Deployment completed successfully!"
        
    - name: Verify deployment
      run: |
        echo "Verifying deployment status..."
        kubectl get pods --all-namespaces
        kubectl get services --all-namespaces
